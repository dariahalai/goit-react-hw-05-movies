{"version":3,"file":"static/js/21.78dc6181.chunk.js","mappings":"gNACA,GAAgB,SAAW,2BAA2B,aAAe,gC,oCCiDrE,EA3CiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,IAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXI,MAAM,sCAAD,OACmCH,EADnC,qEAGFI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GACJ,IAAQX,EAASW,EAATX,KACRC,EAAQD,EACT,IACAY,OAAM,WACLC,EAAAA,GAAAA,MAAY,uBACb,IACAC,SAAQ,kBAAMX,GAAW,EAAjB,GACZ,GAAE,CAACC,IACAF,EACF,OAAO,SAACa,EAAA,EAAD,IAMT,OACE,eAAIC,UAAWC,EAAAA,SAAf,SACGjB,EAAKkB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OACR,gBAAIL,UAAWC,EAAAA,aAAf,WACE,gBACEK,IAAOD,EAPA,mCAO0BA,EARzC,6EASQE,IAAKJ,KAEP,eAAGH,UAAWC,EAAAA,iBAAd,oBAA4CE,MAC5C,eAAGH,UAAWC,EAAAA,iBAAd,wBAAgDG,OANZD,EAD9B,KAYf,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/CastPage/CastPage.module.css?d5ae","pages/CastPage/CastPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastPage_castList__hf-hk\",\"castListItem\":\"CastPage_castListItem__UTJnv\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './CastPage.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'components/Loader/Loader';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=9068359f92c010fa6a3cf763f10a0606&language=en-US`\n    )\n      .then(res => res.json())\n      .then(data => {\n        const { cast } = data;\n        setCast(cast);\n      })\n      .catch(() => {\n        toast.error('Something went wrong');\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  if (loading) {\n    return <Loader/>;\n  }\n  const NO_IMAGE =\n    'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n  const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <ul className={css.castList}>\n      {cast.map(({ name, character, profile_path }) => (\n        <li className={css.castListItem} key={name}>\n          <img\n            src={!!profile_path ? IMG_PATH + profile_path : NO_IMAGE}\n            alt={name}\n          />\n          <p className={css.castListItemName}>Actor: {name}</p>\n          <p className={css.castListItemName}>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default CastPage;\n"],"names":["useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","fetch","then","res","json","data","catch","toast","finally","Loader","className","css","map","name","character","profile_path","src","alt"],"sourceRoot":""}