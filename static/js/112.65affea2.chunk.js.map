{"version":3,"file":"static/js/112.65affea2.chunk.js","mappings":"mOACA,EAA6B,+BAA7B,EAA6E,mCAA7E,EAAiI,mC,SCyEjI,EAtEmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACpB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRT,EAAeH,EAChB,GAAE,CAACA,KACJY,EAAAA,EAAAA,YAAU,WACHV,GAGLW,MAAM,2GAAD,OACwGX,EADxG,iBAC4HE,EAD5H,yBAGFU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GACJ,IAAQC,EAAwBD,EAAxBC,QAAQC,EAAgBF,EAAhBE,YACXD,EAAQE,QACXC,QAAQC,IAAI,0BAEd,IAAMC,EAASL,EAAQM,KAAI,kBAA6B,CACtDC,GADyB,EAAGA,GAE5BC,eAFyB,EAAOA,eAAP,IAI3BjB,EAAgBc,GAChBhB,EAAcY,EACf,IACAQ,OAAM,SAAAC,GACLP,QAAQC,IAAIM,EAEb,GACJ,GAAE,CAAC1B,EAAaE,IAcjB,OACE,iCACE,eAAIyB,UAAWC,EAAf,SACGtB,EAAagB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OAChB,eAAaG,UAAWC,EAAxB,UACE,UAAC,KAAD,CACED,UAAWC,EACXC,MAAO,CAAEC,KAAMtB,GACfuB,GAAE,kBAAaR,GAHjB,WAKE,SAAC,MAAD,CAAcS,MAAO,CAAEC,aAAc,SACpCT,MAPID,EADO,OAapB,mBAAQW,KAAK,SAASC,QA7BV,WACXjC,IAASE,GAGZD,GAAQ,SAAAiC,GAAI,OAAIA,EAAO,CAAX,GACb,EAwBG,wBACA,mBAAQF,KAAK,SAASC,QAxBH,WACP,IAATjC,GAGHC,GAAQ,SAAAiC,GAAI,OAAIA,EAAO,CAAX,GACf,EAmBG,yBAGL,ECvED,EAAuB,wBAAvB,EAA2D,6BAA3D,EAA8F,uBCiC9F,EA/BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA0BtC,EAAAA,EAAAA,UAAS,IAAnC,eAAOD,EAAP,KAAcwC,EAAd,KAaA,OACE,kBAAQX,UAAWC,EAAUS,SAVV,SAAAE,GACnBA,EAAEC,iBACmB,KAAjB1C,EAAM2C,QAIVJ,EAASvC,GACTwC,EAAS,KAJPnB,QAAQC,IAAI,qCAKf,EAEC,WACE,kBACEsB,SAfe,SAAAH,GACnBD,EAASC,EAAEI,cAAcC,MAAMC,cAChC,EAcKlB,UAAWC,EACXM,KAAK,OACLY,KAAK,QACLF,MAAO9C,EACPiD,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAUtB,UAAWC,EAASM,KAAK,SAAnC,sBAGL,ECnBD,EAToB,SAAC,GAAqB,IAApBG,EAAmB,EAAnBA,SAASvC,EAAU,EAAVA,MAC5B,OACC,iCACA,SAAC,EAAD,CAAWuC,SAAUA,KACrB,SAAC,EAAD,CAAYvC,MAAOA,MAGtB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\",\"moviesListLink\":\"MoviesList_moviesListLink__8Ci-i\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { RiMovie2Line } from 'react-icons/ri';\nimport css from './MoviesList.module.css';\nconst MoviesList = ({ query }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchMovies, setSearchMovies] = useState([]);\n  const location = useLocation();\n  // const [error, setError] = useState(false);\n  useEffect(() => {\n    setSearchQuery(query);\n  }, [query]);\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=9068359f92c010fa6a3cf763f10a0606&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`\n    )\n      .then(res => res.json())\n      .then(data => {\n        const { results,total_pages } = data;\n        if (!results.length) {\n          console.log('oops,nothing in search');\n        }\n        const movies = results.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }));\n        setSearchMovies(movies);\n        setTotalPages(total_pages);\n      })\n      .catch(error => {\n        console.log(error);\n        // setError(true);\n      });\n  }, [searchQuery, page]);\n  const nexPage = () => {\n    if(page === totalPages){\n      return\n    }\n    setPage(prev => prev + 1);\n  }\n    const previousPage = () => {\n      if(page === 1){\n        return\n      }\n      setPage(prev => prev - 1);\n  };\n\n  return (\n    <>\n      <ul className={css.moviesList}>\n        {searchMovies.map(({ id, original_title }) => (\n          <li key={id} className={css.moviesListItem}>\n            <Link\n              className={css.moviesListLink}\n              state={{ from: location }}\n              to={`/movies/${id}`}\n            >\n              <RiMovie2Line style={{ paddingRight: '2px' }} />\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <button type=\"button\" onClick={nexPage}>Next page</button>\n      <button type=\"button\" onClick={previousPage}>Prev page</button>\n    </>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"formInput\":\"Searchbar_formInput__gui4+\",\"btn\":\"Searchbar_btn__MFSUa\"};","import { useState } from 'react';\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      console.log('Please, enter correct search word!');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <form   className={css.form} onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        className={css.formInput}\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button   className={css.btn} type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Searchbar;\n","import MoviesList from \"components/MoviesList\";\nimport Searchbar from \"components/Searchbar\";\n// import { useState,useEffect } from \"react\";\n\n const MoviesPage = ({onSubmit,query}) =>{\n   return(\n    <>\n    <Searchbar onSubmit={onSubmit}/>\n    <MoviesList query={query}/> \n    </>\n   )\n}\n\nexport default MoviesPage;"],"names":["query","useState","searchQuery","setSearchQuery","page","setPage","totalPages","setTotalPages","searchMovies","setSearchMovies","location","useLocation","useEffect","fetch","then","res","json","data","results","total_pages","length","console","log","movies","map","id","original_title","catch","error","className","css","state","from","to","style","paddingRight","type","onClick","prev","onSubmit","setQuery","e","preventDefault","trim","onChange","currentTarget","value","toLowerCase","name","autoComplete","autoFocus","placeholder"],"sourceRoot":""}