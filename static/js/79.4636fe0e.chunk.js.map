{"version":3,"file":"static/js/79.4636fe0e.chunk.js","mappings":"sRAEaA,EAAUC,EAAAA,GAAAA,QAAH,6GAMPC,EAAYD,EAAAA,GAAAA,IAAH,qLASTE,EAAaF,EAAAA,GAAAA,GAAH,uD,SCyBvB,EAvCiB,SAAC,GAMX,IALLG,EAKI,EALJA,eACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,OACAC,EACI,EADJA,cAKIC,EAAUD,EADG,mCACwBA,EAFvC,6EAIF,OACE,SAACR,EAAD,WACE,UAACE,EAAD,YACE,gBAAKQ,IAAKD,EAAOE,IAAKP,KACtB,4BACE,wBAAKA,KACL,oCACA,uBAAIE,KACJ,sCACA,uBAAID,KACJ,oCACA,SAACF,EAAD,UACGI,GAAUA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,wBAAgBA,GAAPA,EAAvB,aAMjC,E,QC9BYC,EAAUb,EAAAA,GAAAA,OAAH,iaAsBPD,EAAUC,EAAAA,GAAAA,IAAH,0GAKPc,EAAQd,EAAAA,GAAAA,GAAH,gDAGLe,EAAcf,EAAAA,GAAAA,GAAH,wDAIXgB,GAAUhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,sYC1BdkB,EAAU,CACd,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YAyD3B,EArDyB,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAgBjB,IAdAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,GACXQ,MAAM,sCAAD,OACmCP,EADnC,6DAGFQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GACJd,EAASc,EACV,IACAC,OAAM,WACLC,EAAAA,GAAAA,MAAY,uBACb,IACAC,SAAQ,kBAAMf,GAAW,EAAjB,GACZ,GAAE,CAACC,IACAF,EACF,OAAO,SAACiB,EAAA,EAAD,IAET,IAAQtC,EACRmB,EADQnB,eAAgBC,EACxBkB,EADwBlB,SAAUC,EAClCiB,EADkCjB,aAAcC,EAChDgB,EADgDhB,OAAQC,EACxDe,EADwDf,cAExD,OACE,iCACE,SAACM,EAAD,CACA6B,QAAS,0BAAIZ,EAAQ,oBAACF,EAASe,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAArC,EADT,UACoD,SAAC,MAAD,CAAoBC,KAAK,UAC7E,SAAC,EAAD,CACA1C,eAAgBA,EAChBC,SAAUA,EACVC,aAAcA,EACdC,OAAQA,EACRC,cAAeA,KACf,UAAC,EAAD,YACA,SAACO,EAAD,qCACA,SAACC,EAAD,UACGG,EAAQP,KAAI,gBAAGQ,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,yBACE,SAACJ,EAAD,CAAS8B,GAAI3B,EAAMwB,MAAOf,EAASe,MAAnC,SAA2CvB,KADpCD,EADE,UAOf,SAAC,EAAA4B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 3px double grey;\n \n`;\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCard, GenresList, Section } from './FilmCard.styled';\n\nconst FilmCard = ({\n  original_title,\n  overview,\n  vote_average,\n  genres,\n  backdrop_path,\n}) => {\n  const NO_IMAGE =\n    'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n  const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n  let image = !!backdrop_path ? IMG_PATH + backdrop_path : NO_IMAGE;\n\n  return (\n    <Section>\n      <MovieCard>\n        <img src={image} alt={original_title} />\n        <div>\n          <h2>{original_title}</h2>\n          <h3>Rating</h3>\n          <p>{vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres && genres.map(({ name }) => <li key={name}>{name}</li>)}\n          </GenresList>\n        </div>\n      </MovieCard>\n    </Section>\n  );\n};\nFilmCard.propTypes = {\n  original_title:PropTypes.string,\n  overview:PropTypes.string,\n  vote_average:PropTypes.number,\n  genres:PropTypes.array,\n  backdrop_path:PropTypes.string,\n};\n\nexport default FilmCard;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BtnBack = styled.button`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid green;\n  &:hover {\n    cursor: pointer;\n    background-color: green;\n    font-weight: 500;\n  }\n  &.active {\n    background-color: green;\n    font-weight: 500;\n    color: black;\n  }\n`;\n\nexport const Section = styled.div`\n  padding-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 3px double grey;\n`;\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n`;\nexport const BtnInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\nexport const BtnLink = styled(NavLink)`\n  color: black;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  height: 40px;\n  background-color: transparent;\n  border: 2px solid green;\n  &:hover {\n    cursor: pointer;\n    background-color: green;\n    font-weight: 500;\n  }\n  &.active {\n    background-color: green;\n    font-weight: 500;\n    color: black;\n  }\n`;\n\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet,useLocation,useNavigate } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport Loader from 'components/Loader/Loader';\nimport FilmCard from 'components/FilmCard';\nimport {BtnBack,Section, Title, BtnInfoList, BtnLink} from './MovieDetailsPage.styled';\n\nconst btnLink = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=9068359f92c010fa6a3cf763f10a0606&language=en-US`\n    )\n      .then(res => res.json())\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(() => {\n        toast.error('Something went wrong');\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  if (loading) {\n    return <Loader />;\n  }\n  const { original_title, overview, vote_average, genres, backdrop_path } =\n  movie;\n  return (\n    <>\n      <BtnBack \n      onClick={()=>navigate(location.state?.from ?? '/')}><AiOutlineArrowLeft size='20'/></BtnBack>\n      <FilmCard \n      original_title={original_title} \n      overview={overview} \n      vote_average={vote_average} \n      genres={genres} \n      backdrop_path={backdrop_path} />\n      <Section>\n      <Title>Aditional information</Title>\n      <BtnInfoList>\n        {btnLink.map(({ href, text }) => (\n          <li key={href}>\n            <BtnLink to={href} state={location.state}>{text}</BtnLink>\n          </li>\n        ))}\n      </BtnInfoList>\n    </Section>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Section","styled","MovieCard","GenresList","original_title","overview","vote_average","genres","backdrop_path","image","src","alt","map","name","BtnBack","Title","BtnInfoList","BtnLink","NavLink","btnLink","href","text","useState","movie","setMovie","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetch","then","res","json","data","catch","toast","finally","Loader","onClick","state","from","size","to","Suspense","fallback"],"sourceRoot":""}